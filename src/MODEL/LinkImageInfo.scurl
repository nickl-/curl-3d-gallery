||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
|||
|||     http://www.apache.org/licenses/LICENSE-2.0
|||
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @author Hideki Omatsu
|||

{curl-file-attributes character-encoding = "shift-jis"}


|########################################################################################|
{doc-next
    {purpose  リンク情報                                                               }
    {details {itemize
                 {item {code 解説}  ： 
                     リンク情報。
                 }
                 {item {code 備考}  ： 特になし。          }
                 {item {code 環境}  ： Surge6.0            }
                 {item {code 新規}  ： 2008/08/31 尾松秀紀 
                     新規作成                              }
                 {item {code 変更}  ：                     }
                 {item {code V/R }  ： 01/01               }
                 {item {code Copyright(c)} SCS 2008        }
                 {item {code Author}： 株式会社ベーシック  }}}
}
|########################################################################################|
{define-class public LinkImageInfo
  
  |###|{doc-next {purpose リンク情報の次ID}}|###|
  let private _next_id:int = 1
  
  |###|{doc-next {purpose IDを振り直す場合のID値}}|###|
  let public constant get-new-id:int = -1
  
  
  |###|{doc-next {purpose ID}}|###|
  field public id:int
  
  |###|{doc-next {purpose タイトル}}|###|
  field public title:String
  
  |###|{doc-next {purpose 配置面ID}}|###|
  field public face:int
  
  |###|{doc-next {purpose 配置Ｘ座標}}|###|
  field public xx:double
  
  |###|{doc-next {purpose 配置Ｙ座標}}|###|
  field public yy:double
  
  |###|{doc-next {purpose 幅}}|###|
  field public ww:double
  
  |###|{doc-next {purpose 高さ}}|###|
  field public hh:double
  
  |###|{doc-next {purpose オフセット}}|###|
  field public offset:double
  
  |###|{doc-next {purpose イメージ}}|###|
  field public image:String
  
  |###|{doc-next {purpose 飛び先URL}
         {notes
             特殊機能実装時、本項目に情報が設定される
         }
       }|###|
  field public jump:String
  
  |###|{doc-next {purpose コメント}}|###|
  field public info:String
  
  |###|{doc-next {purpose PolygonSet}}|###|
  field public polygon:#CustomPolygonSet
  
  
  |######################################################################################|
  {doc-next 
    {purpose リンク情報のコンストラクタ                                  }
    {details {itemize
                 {item {code 解説}  ： 
                     初期処理を行う。                                    }
                 {item {code 新規}  :  2008/08/31 尾松秀紀               }}}
    {parameter id, ID　（編集で振り直さない場合のみ指定）                }
    {parameter face, 配置面ID                                            }
    {parameter xx, 配置Ｘ座標                                            }
    {parameter yy, 配置Ｙ座標                                            }
    {parameter ww, 幅                                                    }
    {parameter hh, 高さ                                                  }
    {parameter offset, オフセット                                        }
    {parameter image, イメージ                                           }
    {parameter jump, 飛び先                                              }
    {parameter info, コメント                                            }
  }
  |######################################################################################|
  {constructor public {default
                          id:int = LinkImageInfo.get-new-id,
                          title:String,
                          face:int,
                          xx:double,
                          yy:double,
                          ww:double,
                          hh:double,
                          offset:double,
                          image:String,
                          jump:String,
                          info:String
                      }

    {if id == LinkImageInfo.get-new-id then
        set self.id         = LinkImageInfo._next_id
        {inc LinkImageInfo._next_id}
        {if LinkImageInfo._next_id > 100000 then
            set LinkImageInfo._next_id = 1
        }
     else
        set self.id         = id
    }
    
    set self.title      = title
    set self.face       = face
    set self.xx         = xx
    set self.yy         = yy
    set self.ww         = ww
    set self.hh         = hh
    set self.offset     = offset
    set self.image      = image
    set self.jump       = jump
    set self.info       = info

    {self.make-polygon}
  }

  
  |######################################################################################|
  {doc-next 
    {purpose リンク情報のポリゴン生成                                    }
    {details {itemize
                 {item {code 解説}  ： 
                     リンク情報内容により、配置面を取得し、座標情報から
                     ポリゴンを生成します。
                 }
                 {item {code 新規}  :  2008/08/31 尾松秀紀               }}}
  }
  |######################################################################################|
  {method public {make-polygon}:void
    
    {if-non-null polygon = self.polygon then
        {self.polygon.parent.remove-object polygon}
        set self.polygon = null
    }

    let elem:#ModelElement = {{ObjectManager.get-singleton}.get-element self.face}
    {if-non-null elem then
        {if elem isa ThreeDFaceElement then
            let face-elem:ThreeDFaceElement = elem asa ThreeDFaceElement
            let coords:{Array-of Double3d} = {face-elem.get-rectangle-projection-coords
                                                 self.xx, self.yy,
                                                 self.ww, self.hh,
                                                 self.offset}
            
            let vertices:{Array-of FloatDistance3d} = {new {Array-of FloatDistance3d}}
            {for coord key kk in coords do
                {vertices.append {Utility.Double3d2FloatDistance3d coord}}
            }

            let fill:FillPattern = {FillPattern.default {manifest-url "image", "NoData"}}
            {if self.image.size > 1 then
                set fill = {url self.image}
            }
            set self.polygon = {CustomPolygonSet
                                   self.id,
                                   CustomPolygonSetType.link-image-info,
                                   sub-id           = self.face,
                                   is-intersection? = true,
                                   vertices         = vertices,
                                   fill-pattern     = fill,
                                   texture-coords   = {new {Array-of FloatFraction2d},
                                                          {FloatFraction2d 0.0f, 1.0f},
                                                          {FloatFraction2d 1.0f, 1.0f},
                                                          {FloatFraction2d 1.0f, 0.0f},
                                                          {FloatFraction2d 0.0f, 0.0f}},
                                   primitive-type   = PrimitiveType.polygon}
        }
    }
  }
  
  
}
